var b=Object.defineProperty,M=Object.defineProperties;var k=Object.getOwnPropertyDescriptors;var _=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable;var h=(e,a,s)=>a in e?b(e,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[a]=s,u=(e,a)=>{for(var s in a||(a={}))y.call(a,s)&&h(e,s,a[s]);if(_)for(var s of _(a))A.call(a,s)&&h(e,s,a[s]);return e},p=(e,a)=>M(e,k(a));var f=(e,a,s)=>new Promise((r,i)=>{var d=o=>{try{t(s.next(o))}catch(l){i(l)}},n=o=>{try{t(s.throw(o))}catch(l){i(l)}},t=o=>o.done?r(o.value):Promise.resolve(o.value).then(d,n);t((s=s.apply(e,a)).next())});import{_ as c,c as V}from"./bi.698.0.js";const $=(e,a,s)=>{const{name:r,value:i}=e.target;s(d=>u(u({},d),i?{[r]:i}:{[r]:void 0}))},q=(e,a,s,r,i,d)=>f(void 0,null,function*(){var n;if(!e.accessToken){s({accessToken:c("Access Token can't be empty","bit-integrations")});return}s({}),i(!0),i(!0);try{const t=yield V({accessToken:e.accessToken},"line_authorization");if(t!=null&&t.success)a(p(u({},e),{tokenDetails:t.data})),r(!0),d({show:!0,msg:c("Authorized Successfully","bit-integrations")});else{const o=(n=t==null?void 0:t.data)!=null&&n.data?`${c("Authorization failed Cause:","bit-integrations")} ${t.data.data}. ${c("Please try again","bit-integrations")}`:typeof(t==null?void 0:t.data)=="string"?`${c("Authorization failed Cause:","bit-integrations")} ${t.data}. ${c("Please try again","bit-integrations")}`:c("Authorization failed. Please try again","bit-integrations");d({show:!0,msg:o})}i(!1)}catch(t){d({show:!0,msg:`${c("An error occurred during authorization:","bit-integrations")} ${(t==null?void 0:t.message)||t}`}),i(!1)}}),F=(e,a,s,r)=>{const i=u({},e);return Array.isArray(i[a])||(i[a]=[]),i[a][s]||(i[a][s]={}),i[a][s]=u(u({},i[a][s]),r(i[a][s])),i},I=(e,a,s,r,i)=>{r(d=>F(d,i,a,()=>u({[e.target.name]:e.target.value},e.target.value==="custom"?{customValue:""}:{})))},z=(e,a,s,r,i)=>{var n,t;const d=(t=(n=e==null?void 0:e.target)==null?void 0:n.value)!=null?t:e;r(o=>F(o,i,a,()=>({customValue:d})))},P=(e,a,s,r)=>{s(i=>{var t;const d=i[r]||[];if(d.length<=1)return i;const n=(t=d[e])!=null&&t.groupId?d.filter(o=>o.groupId!==d[e].groupId):d.filter((o,l)=>l!==e);return p(u({},i),{[r]:n})})},j=(e,a,s,r,i)=>{const d=Date.now()+Math.random(),n=r.map(t=>({formField:"",lineFormField:t.value,groupId:d}));s(t=>{const o=u({},t);return Array.isArray(o[i])||(o[i]=[]),o[i].splice(e,0,...n),o})},m=e=>Array.isArray(e)&&e.length>0&&e.every(a=>{var s,r;return a&&(a.formField!=="custom"?(s=a.formField)==null?void 0:s.trim():(r=a.customValue)==null?void 0:r.trim())}),g=e=>{var a,s,r;return((a=e.message_field_map)==null?void 0:a[0])&&(e.message_field_map[0].formField!=="custom"?(s=e.message_field_map[0].formField)==null?void 0:s.trim():(r=e.message_field_map[0].customValue)==null?void 0:r.trim())},v=e=>{var r,i;let a=!1;switch(e.messageType){case"sendPushMessage":a=((r=e.recipientId)==null?void 0:r.trim())&&g(e);break;case"sendReplyMessage":a=((i=e.replyToken)==null?void 0:i.trim())&&g(e);break;case"sendBroadcastMessage":a=g(e);break}const s=[!e.sendEmojis||m(e.emojis_field_map),!e.sendSticker||m(e.sticker_field_map),!e.sendImage||m(e.image_field_map),!e.sendAudio||m(e.audio_field_map),!e.sendVideo||m(e.video_field_map),!e.sendLocation||m(e.location_field_map)].every(Boolean);return a&&s},R=e=>{var r,i;const a=[],s=[["sendEmojis","emojis_field_map","Emojis"],["sendSticker","sticker_field_map","Sticker"],["sendImage","image_field_map","Image"],["sendAudio","audio_field_map","Audio"],["sendVideo","video_field_map","Video"],["sendLocation","location_field_map","Location"]];switch(e.messageType){case"sendPushMessage":(r=e.recipientId)!=null&&r.trim()||a.push(c("Recipient ID is required","bit-integrations")),g(e)||a.push(c("Message field mapping is required","bit-integrations"));break;case"sendReplyMessage":(i=e.replyToken)!=null&&i.trim()||a.push(c("Reply Token is required","bit-integrations")),g(e)||a.push(c("Message field mapping is required","bit-integrations"));break;case"sendBroadcastMessage":g(e)||a.push(c("Message field mapping is required","bit-integrations"));break;default:a.push(c("Please select a message type","bit-integrations"))}return s.forEach(([d,n,t])=>{e[d]&&!m(e[n])&&a.push(`${t} field mapping is required`)}),a},B=e=>{const a=e.filter(s=>s.required);return a.length?a.map(s=>({formField:"",lineFormField:s.value})):[{formField:"",lineFormField:""}]};export{I as a,z as b,j as c,P as d,q as e,R as f,B as g,$ as h,v};
